// Generated by view binder compiler. Do not edit!
package com.example.mealmatrix.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mealmatrix.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FoodItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView dateofWorkout;

  @NonNull
  public final TextView endDate;

  @NonNull
  public final TextView endDateofWorkout;

  @NonNull
  public final ImageView foodImage;

  @NonNull
  public final TextView nameofWorkout;

  @NonNull
  public final TextView startDate;

  @NonNull
  public final TextView workout;

  private FoodItemBinding(@NonNull CardView rootView, @NonNull TextView dateofWorkout,
      @NonNull TextView endDate, @NonNull TextView endDateofWorkout, @NonNull ImageView foodImage,
      @NonNull TextView nameofWorkout, @NonNull TextView startDate, @NonNull TextView workout) {
    this.rootView = rootView;
    this.dateofWorkout = dateofWorkout;
    this.endDate = endDate;
    this.endDateofWorkout = endDateofWorkout;
    this.foodImage = foodImage;
    this.nameofWorkout = nameofWorkout;
    this.startDate = startDate;
    this.workout = workout;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static FoodItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FoodItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.food_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FoodItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dateof_workout;
      TextView dateofWorkout = ViewBindings.findChildViewById(rootView, id);
      if (dateofWorkout == null) {
        break missingId;
      }

      id = R.id.endDate;
      TextView endDate = ViewBindings.findChildViewById(rootView, id);
      if (endDate == null) {
        break missingId;
      }

      id = R.id.end_dateof_workout;
      TextView endDateofWorkout = ViewBindings.findChildViewById(rootView, id);
      if (endDateofWorkout == null) {
        break missingId;
      }

      id = R.id.foodImage;
      ImageView foodImage = ViewBindings.findChildViewById(rootView, id);
      if (foodImage == null) {
        break missingId;
      }

      id = R.id.nameof_workout;
      TextView nameofWorkout = ViewBindings.findChildViewById(rootView, id);
      if (nameofWorkout == null) {
        break missingId;
      }

      id = R.id.startDate;
      TextView startDate = ViewBindings.findChildViewById(rootView, id);
      if (startDate == null) {
        break missingId;
      }

      id = R.id.workout;
      TextView workout = ViewBindings.findChildViewById(rootView, id);
      if (workout == null) {
        break missingId;
      }

      return new FoodItemBinding((CardView) rootView, dateofWorkout, endDate, endDateofWorkout,
          foodImage, nameofWorkout, startDate, workout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
