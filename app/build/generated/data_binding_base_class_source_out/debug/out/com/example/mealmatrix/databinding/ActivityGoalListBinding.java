// Generated by view binder compiler. Do not edit!
package com.example.mealmatrix.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mealmatrix.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGoalListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton imgBackbtn;

  @NonNull
  public final RecyclerView listOfGoals;

  @NonNull
  public final TextView title3;

  @NonNull
  public final Toolbar toolbar8;

  private ActivityGoalListBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton imgBackbtn, @NonNull RecyclerView listOfGoals, @NonNull TextView title3,
      @NonNull Toolbar toolbar8) {
    this.rootView = rootView;
    this.imgBackbtn = imgBackbtn;
    this.listOfGoals = listOfGoals;
    this.title3 = title3;
    this.toolbar8 = toolbar8;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGoalListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGoalListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_goal_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGoalListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgBackbtn;
      ImageButton imgBackbtn = ViewBindings.findChildViewById(rootView, id);
      if (imgBackbtn == null) {
        break missingId;
      }

      id = R.id.list_of_goals;
      RecyclerView listOfGoals = ViewBindings.findChildViewById(rootView, id);
      if (listOfGoals == null) {
        break missingId;
      }

      id = R.id.title3;
      TextView title3 = ViewBindings.findChildViewById(rootView, id);
      if (title3 == null) {
        break missingId;
      }

      id = R.id.toolbar8;
      Toolbar toolbar8 = ViewBindings.findChildViewById(rootView, id);
      if (toolbar8 == null) {
        break missingId;
      }

      return new ActivityGoalListBinding((ConstraintLayout) rootView, imgBackbtn, listOfGoals,
          title3, toolbar8);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
