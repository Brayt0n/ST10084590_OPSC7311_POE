// Generated by view binder compiler. Do not edit!
package com.example.mealmatrix.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mealmatrix.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WorkoutItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView dateofWorkout;

  @NonNull
  public final TextView description;

  @NonNull
  public final TextView endDate;

  @NonNull
  public final TextView endDateofWorkout;

  @NonNull
  public final TextView endTime;

  @NonNull
  public final TextView endTimeWorkout;

  @NonNull
  public final TextView nameofWorkout;

  @NonNull
  public final TextView startDate;

  @NonNull
  public final TextView startTime;

  @NonNull
  public final TextView timeWorkout;

  @NonNull
  public final TextView totalTime;

  @NonNull
  public final TextView type;

  @NonNull
  public final TextView workout;

  @NonNull
  public final TextView workoutDescription;

  @NonNull
  public final TextView workoutTime;

  @NonNull
  public final TextView workoutType;

  private WorkoutItemBinding(@NonNull CardView rootView, @NonNull TextView dateofWorkout,
      @NonNull TextView description, @NonNull TextView endDate, @NonNull TextView endDateofWorkout,
      @NonNull TextView endTime, @NonNull TextView endTimeWorkout, @NonNull TextView nameofWorkout,
      @NonNull TextView startDate, @NonNull TextView startTime, @NonNull TextView timeWorkout,
      @NonNull TextView totalTime, @NonNull TextView type, @NonNull TextView workout,
      @NonNull TextView workoutDescription, @NonNull TextView workoutTime,
      @NonNull TextView workoutType) {
    this.rootView = rootView;
    this.dateofWorkout = dateofWorkout;
    this.description = description;
    this.endDate = endDate;
    this.endDateofWorkout = endDateofWorkout;
    this.endTime = endTime;
    this.endTimeWorkout = endTimeWorkout;
    this.nameofWorkout = nameofWorkout;
    this.startDate = startDate;
    this.startTime = startTime;
    this.timeWorkout = timeWorkout;
    this.totalTime = totalTime;
    this.type = type;
    this.workout = workout;
    this.workoutDescription = workoutDescription;
    this.workoutTime = workoutTime;
    this.workoutType = workoutType;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static WorkoutItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WorkoutItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.workout_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WorkoutItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dateof_workout;
      TextView dateofWorkout = ViewBindings.findChildViewById(rootView, id);
      if (dateofWorkout == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.endDate;
      TextView endDate = ViewBindings.findChildViewById(rootView, id);
      if (endDate == null) {
        break missingId;
      }

      id = R.id.end_dateof_workout;
      TextView endDateofWorkout = ViewBindings.findChildViewById(rootView, id);
      if (endDateofWorkout == null) {
        break missingId;
      }

      id = R.id.endTime;
      TextView endTime = ViewBindings.findChildViewById(rootView, id);
      if (endTime == null) {
        break missingId;
      }

      id = R.id.end_time_workout;
      TextView endTimeWorkout = ViewBindings.findChildViewById(rootView, id);
      if (endTimeWorkout == null) {
        break missingId;
      }

      id = R.id.nameof_workout;
      TextView nameofWorkout = ViewBindings.findChildViewById(rootView, id);
      if (nameofWorkout == null) {
        break missingId;
      }

      id = R.id.startDate;
      TextView startDate = ViewBindings.findChildViewById(rootView, id);
      if (startDate == null) {
        break missingId;
      }

      id = R.id.startTime;
      TextView startTime = ViewBindings.findChildViewById(rootView, id);
      if (startTime == null) {
        break missingId;
      }

      id = R.id.time_workout;
      TextView timeWorkout = ViewBindings.findChildViewById(rootView, id);
      if (timeWorkout == null) {
        break missingId;
      }

      id = R.id.total_time;
      TextView totalTime = ViewBindings.findChildViewById(rootView, id);
      if (totalTime == null) {
        break missingId;
      }

      id = R.id.type;
      TextView type = ViewBindings.findChildViewById(rootView, id);
      if (type == null) {
        break missingId;
      }

      id = R.id.workout;
      TextView workout = ViewBindings.findChildViewById(rootView, id);
      if (workout == null) {
        break missingId;
      }

      id = R.id.workout_description;
      TextView workoutDescription = ViewBindings.findChildViewById(rootView, id);
      if (workoutDescription == null) {
        break missingId;
      }

      id = R.id.workout_time;
      TextView workoutTime = ViewBindings.findChildViewById(rootView, id);
      if (workoutTime == null) {
        break missingId;
      }

      id = R.id.workout_type;
      TextView workoutType = ViewBindings.findChildViewById(rootView, id);
      if (workoutType == null) {
        break missingId;
      }

      return new WorkoutItemBinding((CardView) rootView, dateofWorkout, description, endDate,
          endDateofWorkout, endTime, endTimeWorkout, nameofWorkout, startDate, startTime,
          timeWorkout, totalTime, type, workout, workoutDescription, workoutTime, workoutType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
