// Generated by view binder compiler. Do not edit!
package com.example.mealmatrix.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mealmatrix.R;
import com.github.mikephil.charting.charts.BarChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGoalsSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backImg;

  @NonNull
  public final Button clearButton;

  @NonNull
  public final Button dateSelector;

  @NonNull
  public final BarChart goalChart;

  @NonNull
  public final Button searchButton;

  @NonNull
  public final TextView textView17;

  @NonNull
  public final TextView textView18;

  @NonNull
  public final TextView textView19;

  @NonNull
  public final Toolbar toolbar9;

  private ActivityGoalsSearchBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton backImg, @NonNull Button clearButton, @NonNull Button dateSelector,
      @NonNull BarChart goalChart, @NonNull Button searchButton, @NonNull TextView textView17,
      @NonNull TextView textView18, @NonNull TextView textView19, @NonNull Toolbar toolbar9) {
    this.rootView = rootView;
    this.backImg = backImg;
    this.clearButton = clearButton;
    this.dateSelector = dateSelector;
    this.goalChart = goalChart;
    this.searchButton = searchButton;
    this.textView17 = textView17;
    this.textView18 = textView18;
    this.textView19 = textView19;
    this.toolbar9 = toolbar9;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGoalsSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGoalsSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_goals_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGoalsSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backImg;
      ImageButton backImg = ViewBindings.findChildViewById(rootView, id);
      if (backImg == null) {
        break missingId;
      }

      id = R.id.clearButton;
      Button clearButton = ViewBindings.findChildViewById(rootView, id);
      if (clearButton == null) {
        break missingId;
      }

      id = R.id.dateSelector;
      Button dateSelector = ViewBindings.findChildViewById(rootView, id);
      if (dateSelector == null) {
        break missingId;
      }

      id = R.id.goalChart;
      BarChart goalChart = ViewBindings.findChildViewById(rootView, id);
      if (goalChart == null) {
        break missingId;
      }

      id = R.id.searchButton;
      Button searchButton = ViewBindings.findChildViewById(rootView, id);
      if (searchButton == null) {
        break missingId;
      }

      id = R.id.textView17;
      TextView textView17 = ViewBindings.findChildViewById(rootView, id);
      if (textView17 == null) {
        break missingId;
      }

      id = R.id.textView18;
      TextView textView18 = ViewBindings.findChildViewById(rootView, id);
      if (textView18 == null) {
        break missingId;
      }

      id = R.id.textView19;
      TextView textView19 = ViewBindings.findChildViewById(rootView, id);
      if (textView19 == null) {
        break missingId;
      }

      id = R.id.toolbar9;
      Toolbar toolbar9 = ViewBindings.findChildViewById(rootView, id);
      if (toolbar9 == null) {
        break missingId;
      }

      return new ActivityGoalsSearchBinding((ConstraintLayout) rootView, backImg, clearButton,
          dateSelector, goalChart, searchButton, textView17, textView18, textView19, toolbar9);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
