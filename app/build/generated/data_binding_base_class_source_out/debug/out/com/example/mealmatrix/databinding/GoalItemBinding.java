// Generated by view binder compiler. Do not edit!
package com.example.mealmatrix.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mealmatrix.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GoalItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView actualGoal;

  @NonNull
  public final TextView actualGoalText;

  @NonNull
  public final TextView dateOfGoal;

  @NonNull
  public final TextView goalDate;

  @NonNull
  public final TextView maxGoal;

  @NonNull
  public final TextView maxGoalText;

  @NonNull
  public final TextView minGoal;

  @NonNull
  public final TextView minGoalText;

  private GoalItemBinding(@NonNull CardView rootView, @NonNull TextView actualGoal,
      @NonNull TextView actualGoalText, @NonNull TextView dateOfGoal, @NonNull TextView goalDate,
      @NonNull TextView maxGoal, @NonNull TextView maxGoalText, @NonNull TextView minGoal,
      @NonNull TextView minGoalText) {
    this.rootView = rootView;
    this.actualGoal = actualGoal;
    this.actualGoalText = actualGoalText;
    this.dateOfGoal = dateOfGoal;
    this.goalDate = goalDate;
    this.maxGoal = maxGoal;
    this.maxGoalText = maxGoalText;
    this.minGoal = minGoal;
    this.minGoalText = minGoalText;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static GoalItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GoalItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.goal_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GoalItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actual_goal;
      TextView actualGoal = ViewBindings.findChildViewById(rootView, id);
      if (actualGoal == null) {
        break missingId;
      }

      id = R.id.actual_goal_text;
      TextView actualGoalText = ViewBindings.findChildViewById(rootView, id);
      if (actualGoalText == null) {
        break missingId;
      }

      id = R.id.dateOfGoal;
      TextView dateOfGoal = ViewBindings.findChildViewById(rootView, id);
      if (dateOfGoal == null) {
        break missingId;
      }

      id = R.id.goal_date;
      TextView goalDate = ViewBindings.findChildViewById(rootView, id);
      if (goalDate == null) {
        break missingId;
      }

      id = R.id.max_goal;
      TextView maxGoal = ViewBindings.findChildViewById(rootView, id);
      if (maxGoal == null) {
        break missingId;
      }

      id = R.id.max_goal_text;
      TextView maxGoalText = ViewBindings.findChildViewById(rootView, id);
      if (maxGoalText == null) {
        break missingId;
      }

      id = R.id.min_goal;
      TextView minGoal = ViewBindings.findChildViewById(rootView, id);
      if (minGoal == null) {
        break missingId;
      }

      id = R.id.min_goal_text;
      TextView minGoalText = ViewBindings.findChildViewById(rootView, id);
      if (minGoalText == null) {
        break missingId;
      }

      return new GoalItemBinding((CardView) rootView, actualGoal, actualGoalText, dateOfGoal,
          goalDate, maxGoal, maxGoalText, minGoal, minGoalText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
