// Generated by view binder compiler. Do not edit!
package com.example.mealmatrix.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mealmatrix.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWorkoutTrackerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Spinner categorySpinner;

  @NonNull
  public final TextInputEditText descriptionEditText;

  @NonNull
  public final Button endDateButton;

  @NonNull
  public final Button endTimeButton;

  @NonNull
  public final ImageButton imageButton3;

  @NonNull
  public final ImageButton imageButton4;

  @NonNull
  public final TextInputEditText nameEditText;

  @NonNull
  public final Button startDateButton;

  @NonNull
  public final Button startTimeButton;

  @NonNull
  public final Button submitButton;

  @NonNull
  public final TextView textView14;

  @NonNull
  public final Toolbar toolbar2;

  @NonNull
  public final Button viewButton;

  private ActivityWorkoutTrackerBinding(@NonNull RelativeLayout rootView,
      @NonNull Spinner categorySpinner, @NonNull TextInputEditText descriptionEditText,
      @NonNull Button endDateButton, @NonNull Button endTimeButton,
      @NonNull ImageButton imageButton3, @NonNull ImageButton imageButton4,
      @NonNull TextInputEditText nameEditText, @NonNull Button startDateButton,
      @NonNull Button startTimeButton, @NonNull Button submitButton, @NonNull TextView textView14,
      @NonNull Toolbar toolbar2, @NonNull Button viewButton) {
    this.rootView = rootView;
    this.categorySpinner = categorySpinner;
    this.descriptionEditText = descriptionEditText;
    this.endDateButton = endDateButton;
    this.endTimeButton = endTimeButton;
    this.imageButton3 = imageButton3;
    this.imageButton4 = imageButton4;
    this.nameEditText = nameEditText;
    this.startDateButton = startDateButton;
    this.startTimeButton = startTimeButton;
    this.submitButton = submitButton;
    this.textView14 = textView14;
    this.toolbar2 = toolbar2;
    this.viewButton = viewButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWorkoutTrackerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWorkoutTrackerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_workout_tracker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWorkoutTrackerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.categorySpinner;
      Spinner categorySpinner = ViewBindings.findChildViewById(rootView, id);
      if (categorySpinner == null) {
        break missingId;
      }

      id = R.id.descriptionEditText;
      TextInputEditText descriptionEditText = ViewBindings.findChildViewById(rootView, id);
      if (descriptionEditText == null) {
        break missingId;
      }

      id = R.id.endDateButton;
      Button endDateButton = ViewBindings.findChildViewById(rootView, id);
      if (endDateButton == null) {
        break missingId;
      }

      id = R.id.endTimeButton;
      Button endTimeButton = ViewBindings.findChildViewById(rootView, id);
      if (endTimeButton == null) {
        break missingId;
      }

      id = R.id.imageButton3;
      ImageButton imageButton3 = ViewBindings.findChildViewById(rootView, id);
      if (imageButton3 == null) {
        break missingId;
      }

      id = R.id.imageButton4;
      ImageButton imageButton4 = ViewBindings.findChildViewById(rootView, id);
      if (imageButton4 == null) {
        break missingId;
      }

      id = R.id.nameEditText;
      TextInputEditText nameEditText = ViewBindings.findChildViewById(rootView, id);
      if (nameEditText == null) {
        break missingId;
      }

      id = R.id.startDateButton;
      Button startDateButton = ViewBindings.findChildViewById(rootView, id);
      if (startDateButton == null) {
        break missingId;
      }

      id = R.id.startTimeButton;
      Button startTimeButton = ViewBindings.findChildViewById(rootView, id);
      if (startTimeButton == null) {
        break missingId;
      }

      id = R.id.submitButton;
      Button submitButton = ViewBindings.findChildViewById(rootView, id);
      if (submitButton == null) {
        break missingId;
      }

      id = R.id.textView14;
      TextView textView14 = ViewBindings.findChildViewById(rootView, id);
      if (textView14 == null) {
        break missingId;
      }

      id = R.id.toolbar2;
      Toolbar toolbar2 = ViewBindings.findChildViewById(rootView, id);
      if (toolbar2 == null) {
        break missingId;
      }

      id = R.id.viewButton;
      Button viewButton = ViewBindings.findChildViewById(rootView, id);
      if (viewButton == null) {
        break missingId;
      }

      return new ActivityWorkoutTrackerBinding((RelativeLayout) rootView, categorySpinner,
          descriptionEditText, endDateButton, endTimeButton, imageButton3, imageButton4,
          nameEditText, startDateButton, startTimeButton, submitButton, textView14, toolbar2,
          viewButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
